================================================================================
                         TEST PRATIQUE FLUTTER - DÉVELOPPEMENT
================================================================================

INFORMATIONS GÉNÉRALES
================================================================================
Durée : 3 heures


EXERCICE 1 : GESTION D'API MOCKÉE
================================================================================
Fichier : lib/exercises/exercise_1_api.dart
Points : 10 points

DESCRIPTION :
Implémentez un système de gestion d'utilisateurs avec une API mockée. 
L'application doit permettre de :
- Charger et afficher une liste d'utilisateurs
- Rechercher des utilisateurs en temps réel
- Filtrer par région
- Afficher des statistiques

MÉTHODES À IMPLÉMENTER :
1. _loadUsers() 
   - Charger les utilisateurs depuis MockUserService
   - Gérer l'état de chargement
   - Gérer les erreurs avec try-catch

2. _loadStatistics()
   - Récupérer les statistiques depuis MockUserService
   - Mettre à jour l'interface utilisateur

3. _searchUsers(String query)
   - Recherche en temps réel dans nom, email, région
   - Maintenir le filtre région actuel

4. _filterByDepartment(String region)
   - Filtrer par région sélectionnée
   - Maintenir la recherche actuelle
   - Gérer le cas "Tous"


EXERCICE 2 : LOGIQUE ALGORITHMIQUE
================================================================================
Fichier : lib/exercises/exercise_2_algo.dart
Points : 10 points

DESCRIPTION :
Implémentez un analyseur financier. L'application doit 
analyser des transactions financières et calculer diverses métriques.

MÉTHODES À IMPLÉMENTER :
1. _calculateAnalytics()
   - Calculer solde total (revenus - dépenses)
   - Calculer total des revenus
   - Calculer total des dépenses
   - Calculer totaux par catégorie

2. _filterTransactionsByCategory(String category)
   - Filtrer par catégorie
   - Gérer le cas "Toutes"



CONSIGNES IMPORTANTES
================================================================================

PENDANT L'EXERCICE :
1. Lisez TOUS les commentaires TODO avant de commencer
2. Implémentez les méthodes demandées
3. Testez votre code régulièrement
4. Gérez les cas d'erreur appropriés
5. Suivez les bonnes pratiques Flutter

RÈGLES STRICTES :
- NE PAS modifier les modèles de données existants
- NE PAS supprimer les commentaires TODO
- NE PAS modifier les signatures des méthodes
- TESTER chaque fonctionnalité avant de passer à la suivante


CRITÈRES D'ÉVALUATION
================================================================================
FONCTIONNALITÉ (50%) :
- Implémentation complète des TODO
- Fonctionnalités qui marchent correctement
- Gestion appropriée des états de chargement
- Interface utilisateur réactive

QUALITÉ DU CODE (30%) :
- Lisibilité et organisation
- Respect des bonnes pratiques Flutter
- Gestion appropriée des erreurs
- Performance et optimisation

LOGIQUE ALGORITHMIQUE (20%) :
- Correctness des calculs
- Efficacité des algorithmes
- Robustesse du code


CONSEILS PRATIQUES
================================================================================
1. Commencez par l'exercice qui vous semble le plus simple
2. Lisez attentivement les commentaires TODO
3. Testez fréquemment votre code avec hot reload
4. Gérez les cas d'erreur (données vides, etc.)
5. Optimisez les performances (évitez les appels API inutiles)
6. Demandez des clarifications au superviseur si nécessaire
7. Gérez votre temps


RESSOURCES INTERDITES
================================================================================
- Internet
- Communication avec d'autres candidats


================================================================================
                              BONNE CHANCE !
================================================================================
